{"ast":null,"code":"import _regeneratorRuntime from\"/Users/larrywu/Desktop/Projects/sorting_visualization/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/larrywu/Desktop/Projects/sorting_visualization/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/Users/larrywu/Desktop/Projects/sorting_visualization/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/larrywu/Desktop/Projects/sorting_visualization/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/larrywu/Desktop/Projects/sorting_visualization/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/larrywu/Desktop/Projects/sorting_visualization/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import{getMergeSortAnimations}from'../sortingAlgorithms/sortingAlgorithms.js';import'./sortingVisualizer.css';import{Button}from'../components/Button.jsx';// Change this value for the number of bars (value) in the array.\nvar NUMBER_OF_ARRAY_BARS=100;// This is the main color of the array bars.\nvar PRIMARY_COLOR='turquoise';// This is the color of array bars that are being compared throughout the animations.\nvar SECONDARY_COLOR='red';//animation speed ms\nvar ANIMATION_SPEED=30;//stop a certain sorting process\nvar STOP=false;//indicate if a sorting is already running\nvar RUNNING=false;//current array\nvar arrayBars=document.getElementsByClassName('array-bar');var SortingVisualizer=/*#__PURE__*/function(_React$Component){_inherits(SortingVisualizer,_React$Component);var _super=_createSuper(SortingVisualizer);function SortingVisualizer(props){var _this;_classCallCheck(this,SortingVisualizer);_this=_super.call(this,props);_this.state={array:[]};return _this;}//load for the first time, or refresh page\n_createClass(SortingVisualizer,[{key:\"componentDidMount\",value:function componentDidMount(){this.resetArray();STOP=false;}//reset the array with new values, the same functio that is\n},{key:\"resetArray\",value:function resetArray(){// console.log(\"Entered resetArray\")\nSTOP=true;RUNNING=false;var array=[];for(var i=0;i<NUMBER_OF_ARRAY_BARS;i++){// push number in the range of 10~500 into the array\narray.push(randomIntFromInterval(10,500));}//create new array, replace the previous one\nthis.setState({array:array});}},{key:\"update_arrayBars\",value:function(){var _update_arrayBars=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(arr){var i;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:i=0;case 1:if(!(i<arrayBars.length)){_context.next=9;break;}arrayBars[i].style.height=\"\".concat(arr[i],\"px\");if(!(STOP==false)){_context.next=6;break;}_context.next=6;return new Promise(function(r){return setTimeout(r,ANIMATION_SPEED/5);});case 6:i++;_context.next=1;break;case 9:case\"end\":return _context.stop();}}},_callee);}));function update_arrayBars(_x){return _update_arrayBars.apply(this,arguments);}return update_arrayBars;}()},{key:\"merge_sort\",value:function(){var _merge_sort=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(arr){var sorted,n,buffer,size,leftStart,left,right,leftLimit,rightLimit,i,temp;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:sorted=arr.slice();n=sorted.length;buffer=new Array(n);size=1;case 4:if(!(size<n)){_context2.next=50;break;}leftStart=0;case 6:if(!(leftStart<n)){_context2.next=42;break;}left=leftStart,right=Math.min(left+size,n),leftLimit=right,rightLimit=Math.min(right+size,n),i=left;case 8:if(!(left<leftLimit&&right<rightLimit)){_context2.next=23;break;}arrayBars[left].style.backgroundColor=SECONDARY_COLOR;arrayBars[right].style.backgroundColor=SECONDARY_COLOR;_context2.next=13;return new Promise(function(r){return setTimeout(r,ANIMATION_SPEED/5);});case 13:arrayBars[left].style.backgroundColor=PRIMARY_COLOR;arrayBars[right].style.backgroundColor=PRIMARY_COLOR;if(!(STOP==true)){_context2.next=20;break;}_context2.next=18;return this.update_arrayBars(sorted);case 18:STOP=false;return _context2.abrupt(\"return\",sorted);case 20:if(sorted[left]<=sorted[right]){buffer[i++]=sorted[left++];}else{buffer[i++]=sorted[right++];}_context2.next=8;break;case 23:if(!(left<leftLimit)){_context2.next=31;break;}arrayBars[left].style.backgroundColor=SECONDARY_COLOR;_context2.next=27;return new Promise(function(r){return setTimeout(r,ANIMATION_SPEED/2);});case 27:arrayBars[left].style.backgroundColor=PRIMARY_COLOR;buffer[i++]=sorted[left++];_context2.next=23;break;case 31:if(!(right<rightLimit)){_context2.next=39;break;}arrayBars[right].style.backgroundColor=SECONDARY_COLOR;_context2.next=35;return new Promise(function(r){return setTimeout(r,ANIMATION_SPEED/2);});case 35:arrayBars[right].style.backgroundColor=PRIMARY_COLOR;buffer[i++]=sorted[right++];_context2.next=31;break;case 39:leftStart+=2*size;_context2.next=6;break;case 42:_context2.next=44;return this.update_arrayBars(buffer);case 44:temp=sorted;sorted=buffer;buffer=temp;case 47:size*=2;_context2.next=4;break;case 50:return _context2.abrupt(\"return\",sorted);case 51:case\"end\":return _context2.stop();}}},_callee2,this);}));function merge_sort(_x2){return _merge_sort.apply(this,arguments);}return merge_sort;}()},{key:\"mergeSort\",value:function(){var _mergeSort=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:if(!(RUNNING==true)){_context3.next=4;break;}return _context3.abrupt(\"return\");case 4:RUNNING=true;case 5:STOP=false;_context3.next=8;return this.merge_sort(this.state.array);case 8:this.state.array=_context3.sent;RUNNING=false;case 10:case\"end\":return _context3.stop();}}},_callee3,this);}));function mergeSort(){return _mergeSort.apply(this,arguments);}return mergeSort;}()},{key:\"swap\",value:function swap(arr,i,j){var tmp=arr[i];arr[i]=arr[j];arr[j]=tmp;arrayBars[i].style.height=\"\".concat(arr[i],\"px\");arrayBars[j].style.height=\"\".concat(arr[j],\"px\");}},{key:\"partition\",value:function(){var _partition=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(arr,low,high){var q,i;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:q=low;i=0;arrayBars[high].style.backgroundColor='green';i=low;case 4:if(!(i<high)){_context4.next=24;break;}arrayBars[i].style.backgroundColor=SECONDARY_COLOR;arrayBars[q].style.backgroundColor='blue';if(!(arr[i]<arr[high])){_context4.next=13;break;}_context4.next=10;return new Promise(function(r){return setTimeout(r,ANIMATION_SPEED/10);});case 10:arrayBars[q].style.backgroundColor=PRIMARY_COLOR;this.swap(arr,i,q);q++;case 13:_context4.next=15;return new Promise(function(r){return setTimeout(r,ANIMATION_SPEED/10);});case 15:arrayBars[i].style.backgroundColor=PRIMARY_COLOR;if(!(STOP==true)){_context4.next=21;break;}arrayBars[high].style.backgroundColor=PRIMARY_COLOR;arrayBars[i].style.backgroundColor=PRIMARY_COLOR;arrayBars[q].style.backgroundColor=PRIMARY_COLOR;return _context4.abrupt(\"return\");case 21:i++;_context4.next=4;break;case 24:arrayBars[high].style.backgroundColor=PRIMARY_COLOR;arrayBars[q].style.backgroundColor=PRIMARY_COLOR;this.swap(arr,i,q);return _context4.abrupt(\"return\",q);case 28:case\"end\":return _context4.stop();}}},_callee4,this);}));function partition(_x3,_x4,_x5){return _partition.apply(this,arguments);}return partition;}()},{key:\"quickSortHelper\",value:function(){var _quickSortHelper=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(arr,low,high){var pivot;return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:if(!(low<high)){_context5.next=11;break;}_context5.next=3;return this.partition(arr,low,high);case 3:pivot=_context5.sent;if(!(STOP==true)){_context5.next=6;break;}return _context5.abrupt(\"return\");case 6:_context5.next=8;return this.quickSortHelper(arr,low,pivot-1);case 8:_context5.next=10;return this.quickSortHelper(arr,pivot+1,high);case 10:return _context5.abrupt(\"return\",arr);case 11:case\"end\":return _context5.stop();}}},_callee5,this);}));function quickSortHelper(_x6,_x7,_x8){return _quickSortHelper.apply(this,arguments);}return quickSortHelper;}()},{key:\"quickSort\",value:function(){var _quickSort=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee6(){var array,length;return _regeneratorRuntime.wrap(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:if(!(RUNNING==true)){_context6.next=4;break;}return _context6.abrupt(\"return\");case 4:RUNNING=true;case 5:STOP=false;array=this.state.array;length=array.length;_context6.next=10;return this.quickSortHelper(array,0,length-1);case 10:STOP=false;RUNNING=false;case 12:case\"end\":return _context6.stop();}}},_callee6,this);}));function quickSort(){return _quickSort.apply(this,arguments);}return quickSort;}()},{key:\"heapify\",value:function(){var _heapify=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee7(heap,i,max){var index,leftChild,righChild;return _regeneratorRuntime.wrap(function _callee7$(_context7){while(1){switch(_context7.prev=_context7.next){case 0:if(!(i<max)){_context7.next=20;break;}index=i;leftChild=2*i+1;righChild=leftChild+1;if(leftChild<max&&heap[leftChild]>heap[index]){index=leftChild;}if(righChild<max&&heap[righChild]>heap[index]){index=righChild;}if(!(index==i)){_context7.next=8;break;}return _context7.abrupt(\"return\");case 8:arrayBars[i].style.backgroundColor=SECONDARY_COLOR;arrayBars[index].style.backgroundColor=SECONDARY_COLOR;_context7.next=12;return new Promise(function(r){return setTimeout(r,ANIMATION_SPEED/2);});case 12:arrayBars[i].style.backgroundColor=PRIMARY_COLOR;arrayBars[index].style.backgroundColor=PRIMARY_COLOR;this.swap(heap,i,index);i=index;if(!(STOP==true)){_context7.next=18;break;}return _context7.abrupt(\"return\");case 18:_context7.next=0;break;case 20:case\"end\":return _context7.stop();}}},_callee7,this);}));function heapify(_x9,_x10,_x11){return _heapify.apply(this,arguments);}return heapify;}()},{key:\"buildMaxHeap\",value:function(){var _buildMaxHeap=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee8(array){var i;return _regeneratorRuntime.wrap(function _callee8$(_context8){while(1){switch(_context8.prev=_context8.next){case 0:i=array.length/2-1;i=Math.floor(i);// Build a max heap out of\n// all array elements passed in.\ncase 2:if(!(i>=0)){_context8.next=10;break;}_context8.next=5;return this.heapify(array,i,array.length);case 5:i-=1;if(!(STOP==true)){_context8.next=8;break;}return _context8.abrupt(\"return\");case 8:_context8.next=2;break;case 10:case\"end\":return _context8.stop();}}},_callee8,this);}));function buildMaxHeap(_x12){return _buildMaxHeap.apply(this,arguments);}return buildMaxHeap;}()},{key:\"heapSort\",value:function(){var _heapSort=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee9(){var array,lastElement;return _regeneratorRuntime.wrap(function _callee9$(_context9){while(1){switch(_context9.prev=_context9.next){case 0:if(!(RUNNING==true)){_context9.next=4;break;}return _context9.abrupt(\"return\");case 4:RUNNING=true;case 5:STOP=false;array=this.state.array;// Build our max heap.\n_context9.next=9;return this.buildMaxHeap(array);case 9:// Find last element.\nlastElement=array.length-1;// Continue heap sorting until we have\n// just one element left in the array.\ncase 10:if(!(lastElement>0)){_context9.next=19;break;}this.swap(array,0,lastElement);_context9.next=14;return this.heapify(array,0,lastElement);case 14:lastElement-=1;if(!(STOP==true)){_context9.next=17;break;}return _context9.abrupt(\"break\",19);case 17:_context9.next=10;break;case 19:STOP=false;RUNNING=false;case 21:case\"end\":return _context9.stop();}}},_callee9,this);}));function heapSort(){return _heapSort.apply(this,arguments);}return heapSort;}()},{key:\"bubbleSort\",value:function(){var _bubbleSort=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee10(){var array,sorted,i,j,temp;return _regeneratorRuntime.wrap(function _callee10$(_context10){while(1){switch(_context10.prev=_context10.next){case 0:if(!(RUNNING==true)){_context10.next=4;break;}return _context10.abrupt(\"return\");case 4:RUNNING=true;case 5:STOP=false;array=this.state.array;sorted=true;i=0;case 9:if(!(i<array.length-1)){_context10.next=33;break;}j=0;case 11:if(!(j<array.length-i-1)){_context10.next=28;break;}//let arrayBars = document.getElementsByClassName('array-bar');\narrayBars[j].style.backgroundColor=SECONDARY_COLOR;arrayBars[j+1].style.backgroundColor=SECONDARY_COLOR;_context10.next=16;return new Promise(function(r){return setTimeout(r,ANIMATION_SPEED/30);});case 16:if(array[j]>array[j+1]){sorted=false;temp=array[j];array[j]=array[j+1];array[j+1]=temp;arrayBars[j].style.height=\"\".concat(array[j],\"px\");arrayBars[j+1].style.height=\"\".concat(array[j+1],\"px\");}arrayBars[j].style.backgroundColor=PRIMARY_COLOR;arrayBars[j+1].style.backgroundColor=PRIMARY_COLOR;_context10.next=21;return new Promise(function(r){return setTimeout(r,ANIMATION_SPEED/30);});case 21:if(!(STOP==true)){_context10.next=25;break;}STOP=false;RUNNING=false;return _context10.abrupt(\"return\");case 25:j++;_context10.next=11;break;case 28:if(!(sorted==true)){_context10.next=30;break;}return _context10.abrupt(\"break\",33);case 30:i++;_context10.next=9;break;case 33:RUNNING=false;case 34:case\"end\":return _context10.stop();}}},_callee10,this);}));function bubbleSort(){return _bubbleSort.apply(this,arguments);}return bubbleSort;}()},{key:\"stop\",value:function stop(){STOP=!STOP;}},{key:\"render\",value:function render(){var _this2=this;var array=this.state.array;return/*#__PURE__*/React.createElement(\"div\",{className:\"array-container\"},/*#__PURE__*/React.createElement(\"div\",{className:\"button-container\"},/*#__PURE__*/React.createElement(Button,{onClick:function onClick(){return _this2.resetArray();},type:\"button\",buttonStyle:\"btn--success--solid\",buttonSize:\"btn--medium\"},\"Generate New Array\"),/*#__PURE__*/React.createElement(Button,{onClick:function onClick(){return _this2.mergeSort();},type:\"button\",buttonStyle:\"btn--primary--outline\",buttonSize:\"btn--medium\"},\"Merge Sort\"),/*#__PURE__*/React.createElement(Button,{onClick:function onClick(){return _this2.quickSort();},type:\"button\",buttonStyle:\"btn--primary--outline\",buttonSize:\"btn--medium\"},\"Quick Sort\"),/*#__PURE__*/React.createElement(Button,{onClick:function onClick(){return _this2.heapSort();},type:\"button\",buttonStyle:\"btn--primary--outline\",buttonSize:\"btn--medium\"},\"Heap Sort\"),/*#__PURE__*/React.createElement(Button,{onClick:function onClick(){return _this2.bubbleSort();},type:\"button\",buttonStyle:\"btn--primary--outline\",buttonSize:\"btn--medium\"},\"Bubble Sort\"),/*#__PURE__*/React.createElement(Button,{onClick:function onClick(){return _this2.stop();},type:\"button\",buttonStyle:\"btn--danger--solid\",buttonSize:\"btn--medium\"},\"Stop\")),array.map(function(value,idx){return/*#__PURE__*/React.createElement(\"div\",{className:\"array-bar\",key:idx,style:{backgroundColor:PRIMARY_COLOR,height:\"\".concat(value,\"px\")}});}));}}]);return SortingVisualizer;}(React.Component);// From https://stackoverflow.com/questions/4959975/generate-random-number-between-two-numbers-in-javascript\nexport{SortingVisualizer as default};function randomIntFromInterval(min,max){// min and max included\nreturn Math.floor(Math.random()*(max-min+1)+min);}","map":{"version":3,"sources":["/Users/larrywu/Desktop/Projects/sorting_visualization/src/SortingVisualizer/SortingVisualizer.jsx"],"names":["React","getMergeSortAnimations","Button","NUMBER_OF_ARRAY_BARS","PRIMARY_COLOR","SECONDARY_COLOR","ANIMATION_SPEED","STOP","RUNNING","arrayBars","document","getElementsByClassName","SortingVisualizer","props","state","array","resetArray","i","push","randomIntFromInterval","setState","arr","length","style","height","Promise","r","setTimeout","sorted","slice","n","buffer","Array","size","leftStart","left","right","Math","min","leftLimit","rightLimit","backgroundColor","update_arrayBars","temp","merge_sort","j","tmp","low","high","q","swap","partition","pivot","quickSortHelper","heap","max","index","leftChild","righChild","floor","heapify","buildMaxHeap","lastElement","mergeSort","quickSort","heapSort","bubbleSort","stop","map","value","idx","Component","random"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {getMergeSortAnimations} from '../sortingAlgorithms/sortingAlgorithms.js';\nimport './sortingVisualizer.css';\nimport {Button} from '../components/Button.jsx'\n\n// Change this value for the number of bars (value) in the array.\nconst NUMBER_OF_ARRAY_BARS = 100;\n\n// This is the main color of the array bars.\nconst PRIMARY_COLOR = 'turquoise';\n\n// This is the color of array bars that are being compared throughout the animations.\nconst SECONDARY_COLOR = 'red';\n\n//animation speed ms\nlet ANIMATION_SPEED = 30;\n\n//stop a certain sorting process\nlet STOP = false;\n\n//indicate if a sorting is already running\nlet RUNNING = false;\n\n//current array\nconst arrayBars = document.getElementsByClassName('array-bar');\n\nexport default class SortingVisualizer extends React.Component {\n  constructor(props) {\n    super(props);\n\n  this.state = {\n      array: [],\n    };\n  }\n\n//load for the first time, or refresh page\ncomponentDidMount() {\n  this.resetArray();\n  STOP = false;\n}\n\n//reset the array with new values, the same functio that is\nresetArray() {\n  // console.log(\"Entered resetArray\")\n  STOP = true;\n  RUNNING = false;\n  const array = [];\n  for (let i = 0; i < NUMBER_OF_ARRAY_BARS; i++) {\n    // push number in the range of 10~500 into the array\n    array.push(randomIntFromInterval(10, 500));\n  }\n  //create new array, replace the previous one\n  this.setState({array});\n}\n\nasync update_arrayBars(arr){\n  for(let i =0; i<arrayBars.length; i++){\n    arrayBars[i].style.height = `${arr[i]}px`;\n    if(STOP == false)\n    await new Promise(r => setTimeout(r,  ANIMATION_SPEED/5));\n  }\n\n}\n\nasync merge_sort(arr) {\n    let sorted = arr.slice();\n    let n = sorted.length;\n    let buffer = new Array(n);\n\n    for (let size = 1; size < n; size *= 2) {\n      for (let leftStart = 0; leftStart < n; leftStart += 2*size) {\n        let left = leftStart,\n            right = Math.min(left + size, n),\n            leftLimit = right,\n            rightLimit = Math.min(right + size, n),\n            i = left;\n        while (left < leftLimit && right < rightLimit) {\n          arrayBars[left].style.backgroundColor = SECONDARY_COLOR;\n          arrayBars[right].style.backgroundColor = SECONDARY_COLOR;\n          await new Promise(r => setTimeout(r,  ANIMATION_SPEED/5));\n          arrayBars[left].style.backgroundColor = PRIMARY_COLOR;\n          arrayBars[right].style.backgroundColor = PRIMARY_COLOR;\n\n          if(STOP == true){\n            await this.update_arrayBars(sorted);\n            STOP = false;\n            return sorted;\n          }\n\n          if (sorted[left] <= sorted[right]) {\n            buffer[i++] = sorted[left++];\n          } else {\n            buffer[i++] = sorted[right++];\n          }\n        }\n\n        while (left < leftLimit) {\n          arrayBars[left].style.backgroundColor = SECONDARY_COLOR;\n          await new Promise(r => setTimeout(r,  ANIMATION_SPEED/2));\n          arrayBars[left].style.backgroundColor = PRIMARY_COLOR;\n          buffer[i++] = sorted[left++];\n        }\n        while (right < rightLimit) {\n          arrayBars[right].style.backgroundColor = SECONDARY_COLOR;\n          await new Promise(r => setTimeout(r,  ANIMATION_SPEED/2));\n          arrayBars[right].style.backgroundColor = PRIMARY_COLOR;\n          buffer[i++] = sorted[right++];\n        }\n      }\n      await this.update_arrayBars(buffer);\n\n      let temp = sorted;\n          sorted = buffer;\n          buffer = temp;\n    }\n    return sorted;\n  }\n\n  async mergeSort() {\n    if(RUNNING == true)\n      return;\n    else\n      RUNNING = true;\n    STOP = false;\n\n    this.state.array = await this.merge_sort(this.state.array);\n    RUNNING = false;\n  }\n\n swap (arr, i, j){\n      let tmp = arr[i];\n      arr[i] = arr[j];\n      arr[j] = tmp;\n      arrayBars[i].style.height = `${arr[i]}px`;\n      arrayBars[j].style.height = `${arr[j]}px`;\n  }\n\n async partition (arr, low, high){\n    let q = low;\n    let i = 0;\n    arrayBars[high].style.backgroundColor = 'green';\n\n    for (i = low; i < high; i++) {\n      arrayBars[i].style.backgroundColor = SECONDARY_COLOR;\n      arrayBars[q].style.backgroundColor = 'blue';\n      if (arr[i] < arr[high]) {\n          await new Promise(r => setTimeout(r,  ANIMATION_SPEED/10));\n          arrayBars[q].style.backgroundColor = PRIMARY_COLOR;\n          this.swap(arr, i, q);\n          q++;\n      }\n      await new Promise(r => setTimeout(r,  ANIMATION_SPEED/10));\n      arrayBars[i].style.backgroundColor = PRIMARY_COLOR;\n\n      if(STOP == true){\n        arrayBars[high].style.backgroundColor = PRIMARY_COLOR;\n        arrayBars[i].style.backgroundColor = PRIMARY_COLOR;\n        arrayBars[q].style.backgroundColor = PRIMARY_COLOR;\n        return;\n      }\n    }\n    arrayBars[high].style.backgroundColor = PRIMARY_COLOR;\n    arrayBars[q].style.backgroundColor = PRIMARY_COLOR;\n\n    this.swap(arr, i, q);\n    return q;\n  }\n\n  async quickSortHelper(arr, low, high){\n    if (low < high) {\n        let pivot = await this.partition(arr, low, high);\n\n        //const arrayBars = document.getElementsByClassName('array-bar');\n        //arrayBars[pivot].style.backgroundColor = SECONDARY_COLOR;\n        //await new Promise(r => setTimeout(r,  ANIMATION_SPEED*10));\n        //arrayBars[pivot].style.backgroundColor = PRIMARY_COLOR;\n        if(STOP == true){\n          // RUNNING = false;\n          return;\n        }\n        await this.quickSortHelper(arr, low, pivot - 1);\n        await this.quickSortHelper(arr, pivot + 1, high);\n        return arr;\n    }\n  }\n\nasync quickSort() {\n    if(RUNNING == true)\n      return;\n    else\n      RUNNING = true;\n    STOP = false;\n\n\n    let array = this.state.array;\n    let length = array.length;\n    await this.quickSortHelper(array, 0, length-1);\n\n    STOP = false;\n    RUNNING = false;\n}\n\nasync heapify(heap, i, max) {\n    var index, leftChild, righChild;\n\n    while(i < max) {\n      index = i;\n\n      leftChild = 2*i + 1;\n      righChild = leftChild + 1;\n\n      if (leftChild < max && heap[leftChild] > heap[index]) {\n        index = leftChild;\n      }\n\n      if (righChild < max && heap[righChild] > heap[index]) {\n        index = righChild;\n      }\n\n      if (index == i) {\n        return;\n      }\n\n      arrayBars[i].style.backgroundColor = SECONDARY_COLOR;\n      arrayBars[index].style.backgroundColor = SECONDARY_COLOR;\n      await new Promise(r => setTimeout(r,  ANIMATION_SPEED/2));\n      arrayBars[i].style.backgroundColor = PRIMARY_COLOR;\n      arrayBars[index].style.backgroundColor = PRIMARY_COLOR;\n      this.swap(heap,i, index);\n\n      i = index;\n\n      if(STOP == true)\n        return;\n\n  }\n}\n\nasync buildMaxHeap(array) {\n    var i;\n    i = array.length / 2 - 1;\n    i = Math.floor(i);\n\n    // Build a max heap out of\n    // all array elements passed in.\n    while (i >= 0) {\n      await this.heapify(array, i, array.length);\n      i -= 1;\n      if(STOP == true)\n        return;\n    }\n}\n\nasync heapSort() {\n    if(RUNNING == true)\n      return;\n    else\n      RUNNING = true;\n    STOP = false;\n\n\n    let array = this.state.array;\n    // Build our max heap.\n    await this.buildMaxHeap(array);\n\n    // Find last element.\n    let lastElement = array.length - 1;\n\n    // Continue heap sorting until we have\n    // just one element left in the array.\n    while(lastElement > 0) {\n      this.swap(array, 0, lastElement);\n\n      await this.heapify(array, 0, lastElement);\n\n      lastElement -= 1\n\n      if(STOP == true)\n        break;\n    }\n\n    STOP = false;\n    RUNNING = false;\n}\n\n\nasync bubbleSort() {\n    if(RUNNING == true)\n      return;\n    else\n      RUNNING = true;\n\n    STOP = false;\n\n    let array = this.state.array;\n    let sorted = true;\n\n    for(let i = 0; i<array.length - 1; i++){\n      for(let j = 0; j<array.length- i-1; j++){\n          //let arrayBars = document.getElementsByClassName('array-bar');\n          arrayBars[j].style.backgroundColor = SECONDARY_COLOR;\n          arrayBars[j+1].style.backgroundColor = SECONDARY_COLOR;\n          await new Promise(r => setTimeout(r,  ANIMATION_SPEED/30));\n\n          if(array[j] > array[j+1]){\n            sorted = false;\n            let temp = array[j];\n            array[j] = array [j+1];\n            array[j+1] = temp;\n            arrayBars[j].style.height = `${array[j]}px`;\n            arrayBars[j+1].style.height = `${array[j+1]}px`;\n          }\n          arrayBars[j].style.backgroundColor = PRIMARY_COLOR;\n          arrayBars[j+1].style.backgroundColor = PRIMARY_COLOR;\n          await new Promise(r => setTimeout(r,  ANIMATION_SPEED/30));\n\n        if(STOP == true){\n          STOP = false;\n          RUNNING = false;\n          return;\n          }\n        }\n        if(sorted == true){\n          break;\n        }\n    }\n    RUNNING = false;\n}\n\nstop(){\n  STOP = !STOP;\n}\n\n\nrender() {\n  const {array} = this.state;\n\n  return (\n    <div className=\"array-container\">\n    <div className = \"button-container\">\n      <Button onClick={() => this.resetArray()} type=\"button\"\n      buttonStyle=\"btn--success--solid\"\n      buttonSize=\"btn--medium\">Generate New Array</Button>\n\n      <Button onClick={() => this.mergeSort()} type=\"button\"\n      buttonStyle=\"btn--primary--outline\"\n      buttonSize=\"btn--medium\">Merge Sort</Button>\n\n      <Button onClick={() => this.quickSort()} type=\"button\"\n      buttonStyle=\"btn--primary--outline\"\n      buttonSize=\"btn--medium\">Quick Sort</Button>\n\n      <Button onClick={() => this.heapSort()} type=\"button\"\n      buttonStyle=\"btn--primary--outline\"\n      buttonSize=\"btn--medium\">Heap Sort</Button>\n\n      <Button onClick={() => this.bubbleSort()} type=\"button\"\n      buttonStyle=\"btn--primary--outline\"\n      buttonSize=\"btn--medium\">Bubble Sort</Button>\n\n      <Button onClick={() => this.stop()} type=\"button\"\n      buttonStyle=\"btn--danger--solid\"\n      buttonSize=\"btn--medium\">Stop</Button>\n      </div>\n\n      {array.map((value, idx) => (\n        <div\n          className=\"array-bar\"\n          key={idx}\n          style={{\n            backgroundColor: PRIMARY_COLOR,\n            height: `${value}px`,\n          }}></div>\n      ))}\n\n    </div>\n    );\n  }\n}\n\n// From https://stackoverflow.com/questions/4959975/generate-random-number-between-two-numbers-in-javascript\nfunction randomIntFromInterval(min, max) {\n  // min and max included\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n"]},"metadata":{},"sourceType":"module"}